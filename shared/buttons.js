const { token } = require("./utils");

module.exports = {
	".btn": {
		"--height": "40px",
		textDecoration: "none !important",
		display: "inline-flex",
		justifyContent: "center",
		alignItems: "center",
		cursor: "pointer",
		borderRadius: token("borderRadius.full"),
		border: `${token("borderWidth[DEFAULT]")} solid transparent`,
		textAlign: "center",
		fontWeight: token("fontWeight.semibold"),
		padding: "10px 22px",
		height: "var(--height)",
		fontSize: "13px",
		".btn__icon, .icon": { fill: "currentColor" },
		"&:hover": { borderRadius: token("borderRadius.full") },
		"&:disabled": { cursor: "not-allowed" },
		"&:focus": {
			borderRadius: token("borderRadius.full"),
			outline: "none",
			boxShadow: token("boxShadow.outline"),
		},
	},
	".btn__icon": {
		display: "inline",
		marginRight: token("spacing[2]"),
		fill: "currentColor",
	},
	".btn__icon--right": { marginRight: "0", marginLeft: token("spacing[2]") },
	".btn--small": { "--height": "32px", fontSize: "13px" },
	".btn--large": { "--height": "48px", fontSize: "14px" },
	".btn--filled": {
		color: `${token("textColor.white")} !important`,
		backgroundColor: token("backgroundColor[interactive-05]"),
		"&:hover": { backgroundColor: token("backgroundColor[interactive-04]") },
		"&:active, &.loading": {
			"--tw-text-opacity": "0.7",
			color: `${token("textColor.white")} !important`,
			boxShadow: "none",
			background: "rgba(53, 61, 171, 0.7)",
		},
		"&:disabled": {
			backgroundColor: token("backgroundColor[light-disabled]"),
			color: token("textColor.white"),
		},
		".theme--dark &, &.theme--dark": {
			"&:hover": {
				backgroundColor: token("backgroundColor[interactive-06]"),
			},
			"&:disabled": {
				backgroundColor: token("backgroundColor[dark-disabled]"),
				color: "#677078 !important",
			},
			"&:active, &.loading": {
				"& .icon, & .btn__icon--r, & .btn__icon": {
					display: "none",
				},
				background: "rgba(115, 122, 222, 0.7)",
			},
		},
	},
	".btn--ghost": {
		color: `${token("textColor.white")} !important`,
		fontWeight: token("fontWeight.semibold"),
		"--tw-bg-opacity": "0.24",
		backgroundColor: token("backgroundColor.white"),
		backdropFilter: "blur(16px)",
		"&:hover": {
			opacity: 100,
			"--tw-bg-opacity": "0.42",
			backgroundColor: token("backgroundColor.white"),
		},
		"&:focus": {
			outline: "none",
			opacity: 100,
			border: `${token("borderWidth[DEFAULT]")} solid ${token("colors.white")}`,
			boxShadow: "0 0 0 3px rgba(255, 255, 255, 0.6)",
		},
		"&:disabled": {
			"--tw-bg-opacity": "0.14",
			"--tw-text-opacity": "0.32",
			backgroundColor: token("backgroundColor.white"),
			color: token("textColor.white"),
			cursor: "not-allowed",
		},
		"&:active, &.loading": {
			"--tw-bg-opacity": "0.32",
			"--tw-text-opacity": "0.32",
			backgroundColor: token("backgroundColor.white"),
			color: `${token("textColor.white")} !important`,
			boxShadow: "none",
			borderColor: "transparent",
		},
	},
	".btn--outline": {
		color: token("textColor[interactive-07]"),
		borderColor: token("colors[interactive-08]"),
		"&:hover": {
			borderColor: token("colors[interactive-05]"),
			color: token("textColor[interactive-05]"),
			opacity: 100,
			boxShadow: `0 0 0 1px ${token("colors.blurple-300")}`,
		},
		"&:focus": { boxShadow: `0 0 0 3px ${token("colors.blurple-300")}` },
		".theme--dark &, &.theme--dark": {
			color: token("textColor.white"),
			"&:hover": {
				borderColor: token("colors[interactive-06]"),
				color: token("textColor[blurple-300]"),
			},
		},
	},
	".btn--icon": {
		"--size": "40px",
		border: "none",
		background: "none",
		outline: "none",
		width: "var(--size)",
		height: "var(--size)",
		padding: "10px",
		"& svg": { "--size": "20px", width: "var(--size)", height: "var(--size)" },
		"&:hover:not(:focus)": { borderRadius: "var(--size)" },
		"&:hover:not(:focus) svg": { fill: "var(--btn-icon-svg-hover)" },
		"&:focus": { borderRadius: "6px", background: "none" },
		"&:active": { boxShadow: "none !important", borderRadius: "var(--size)" },
		".theme--ghost &, &.theme--ghost": {
			"& svg": { fill: token("colors.white") },
			"&:hover:not(:focus)": {
				"--tw-bg-opacity": "0.16",
				backgroundColor: token("backgroundColor.white"),
			},
			"&:hover:not(:focus) svg": { fill: token("colors.white") },
			"&:focus": { boxShadow: "0 0 0 3px rgba(255, 255, 255, 0.6)" },
			"&:focus svg": { fill: token("colors.white") },
			"&:active svg": { fill: "rgba(255, 255, 255, 0.5)" },
		},
		".theme--dark &, &.theme--dark": {
			"& svg": { fill: token("colors.white") },
			"&:hover:not(:focus)": {
				"--tw-bg-opacity": "0.32",
				backgroundColor: token("backgroundColor[blurple-300]"),
			},
			"&:hover:not(:focus) svg": { fill: token("colors.white") },
			"&:focus": { boxShadow: `0 0 0 3px ${token("colors.blurple-300")}` },
			"&:focus svg": { fill: token("colors.white") },
			"&:active svg": { fill: "rgba(160, 165, 235, 0.7)" },
		},
	},
	".btn--text": {
		paddingLeft: token("spacing[1]"),
		paddingRight: token("spacing[1]"),
		marginLeft: `calc(-1 * ${token("spacing[1]")})`,
		marginRight: `calc(-1 * ${token("spacing[1]")})`,
		border: `${token("borderWidth[2]")} solid transparent`,
		borderRadius: token("borderRadius.md"),
		color: token("textColor[interactive-05]"),
		"&:hover": { color: token("textColor[interactive-04]") },
		"&:focus": { borderRadius: token("borderRadius.md") },
		"&:hover:not(:focus)": {
			paddingLeft: "0",
			paddingRight: "0",
			marginLeft: "0",
			marginRight: "0",
			borderRadius: "none",
			borderBottom: `2px solid ${token("colors.interactive-05")}`,
		},
		".theme--dark &, &.theme--dark": {
			color: token("textColor[blurple-300]"),
			"&:hover": { color: token("textColor[blurple-300]") },
			"&:hover:not(:focus)": {
				paddingLeft: "0",
				paddingRight: "0",
				marginLeft: "0",
				marginRight: "0",
				borderRadius: "none",
				color: token("textColor[interactive-06]"),
				borderBottom: `2px solid ${token("colors.interactive-06")}`,
			},
			"&:focus": {
				color: token("textColor.white"),
				boxShadow: `0 0 0 3px ${token("colors.blurple-300")}`,
			},
		},
		".theme--ghost &, &.theme--ghost": {
			color: token("textColor.white"),
			"&:hover": { color: token("textColor.white") },
			"&:hover:not(:focus)": {
				paddingLeft: "0",
				paddingRight: "0",
				marginLeft: "0",
				marginRight: "0",
				borderRadius: "none",
				borderBottom: `2px solid ${token("colors.white")}`,
			},
			"&:focus": { boxShadow: "0 0 0 3px rgba(255, 255, 255, 0.6)" },
		},
	},
};
